<html>
<head>
<meta charset="utf-8">
<title>Responsive Interactive Canvas</title>
</head>


<body>
    <canvas id="canvas" width="640" height="480"></canvas>
</body>
<script>


                var W = 640; var H = 480;
                canvas.width = W;
                canvas.height = H;
				
  var Canvas = document.getElementById("canvas");
var Context = Canvas.getContext('2d');

var circles = new Array();
var semicircles = new Array();
var squares = new Array();
var rectangles = new Array(); 
var triangle = new Array();
var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
var particles = [];






function Circle(radius, speed, width, xPos, yPos) {
    this.radius = radius;
    this.speed = speed;
    this.width = width;
    this.xPos = xPos;
    this.yPos = yPos;
    this.opacity = .1 + Math.random() * .5;

    this.counter = 0;

    var signHelper = Math.floor(Math.random() * 2);

    if (signHelper == 1) {
        this.sign = -1;
    } else {
        this.sign = 1;
    }
}
	function Semicircle(radius, speed, width, xPos, yPos) {
    this.radius = radius;
    this.speed = speed;
    this.width = width;
    this.xPos = xPos;
    this.yPos = yPos;
    this.opacity = .1 + Math.random() * .5;

    this.counter = 0;

    var signHelper = Math.floor(Math.random() * 2);

    if (signHelper == 1) {
        this.sign = -1;
    } else {
        this.sign = 1;
    }
}
	function Square(radius, speed, width, xPos, yPos) {
    this.radius = radius;
    this.speed = speed;
    this.width = width;
    this.xPos = xPos;
    this.yPos = yPos;
    this.opacity = .1 + Math.random() * .5;

    this.counter = 0;

    var signHelper = Math.floor(Math.random() * 2);

    if (signHelper == 1) {
        this.sign = -1;
    } else {
        this.sign = 1;
    }
}

	function Rectangle(radius, speed, width, xPos, yPos) {
	this.radius = radius;
    this.speed = speed;
    this.width = width;
    this.xPos = xPos;
    this.yPos = yPos;
    this.opacity = .1 + Math.random() * .5;
 
    this.counter = 0;
 
    var signHelper = Math.floor(Math.random() * 2);
 
    if (signHelper == 1) {
        this.sign = -1;
    } else {
        this.sign = 1;
    }
}
	//draw circle
	Circle.prototype.update = function () {
    this.counter += this.sign * this.speed;

    Context.beginPath();
    Context.arc(this.xPos + Math.cos(this.counter / 100) * this.radius,
    this.yPos + Math.sin(this.counter / 100) * this.radius,
    this.width,
    0,
    Math.PI ,
    false);

    Context.closePath();

    Context.fillStyle = 'rgba(50, 95, 100,' + this.opacity + ')';
    Context.fill();
};
	//draw semicircle
	Semicircle.prototype.update = function () {
    this.counter += this.sign * this.speed;

    Context.beginPath();
    Context.arc(this.xPos + Math.cos(this.counter / 100) * this.radius,
    this.yPos + Math.sin(this.counter / 100) * this.radius,
    this.width,
    0,
    Math.PI *2 ,
    true);

    Context.closePath();

    Context.fillStyle = 'rgba(250, 95, 100,' + this.opacity + ')';
    Context.fill();
};
	//draw square
	Square.prototype.update = function () {
    this.counter += this.sign * this.speed;

    Context.fillRect(this.xPos + Math.cos(this.counter / 100) *this.radius, this.yPos + Math.sin(this.counter / 100)*this.radius, 50, 50);

    Context.fillStyle = 'rgba(250, 0, 180,' + this.opacity + ')';

};

	//draw rectangle
	Rectangle.prototype.update = function () {
    this.counter += this.sign * this.speed;
 
    Context.fillRect(this.xPos + Math.cos(this.counter / 100) *this.radius, this.yPos + Math.sin(this.counter / 100)*this.radius, 95, 50);

    Context.fillStyle = 'rgba(47, 100, 240,' + this.opacity + ')';
	
};


	function setupCircles() {
    for (var i = 0; i < 5; i++) {
        var randomX = Math.round(-200 + Math.random() * 1000);
        var randomY = Math.round(-200 + Math.random() * 1000);
        var speed = .05 + Math.random() * 3;
        var size = 5 + Math.random() * 100;
        var radius = 5 + Math.random() * 100;

        var circle = new Circle(radius, speed, size, randomX, randomY);
        circles.push(circle);
    }
    drawAndUpdate();
}
	setupSemicircles();
	function setupSemicircles() {
    for (var i = 0; i < 5; i++) {
        var randomX = Math.round(-200 + Math.random() * 1000);
        var randomY = Math.round(-200 + Math.random() * 1000);
        var speed = .05 + Math.random() * 3;
        var size = 5 + Math.random() * 100;
        var radius = 5 + Math.random() * 100;

        var semicircle = new Semicircle(radius, speed, size, randomX, randomY);
        semicircles.push(semicircle);
    }
    drawAndUpdate();
}
	setupCircles();

	function setupSquares() {
    for (var i = 0; i < 5; i++) {
        var randomX = Math.round(-100 + Math.random() * 700);
        var randomY = Math.round(-100 + Math.random() * 700);
        var speed = .05 + Math.random() * 3;
        var size = 5 + Math.random() * 100;
        var radius = 5 + Math.random() * 100;

        var square = new Square(radius, speed, size, randomX, randomY);
        squares.push(square);
    }
    drawAndUpdate();
}
	setupSquares();

	function setupRectangles() {
    for (var i = 0; i < 5; i++) {
        var randomX = Math.round(-100 + Math.random() * 700);
        var randomY = Math.round(-100 + Math.random() * 700);
        var speed = .05 + Math.random() * 10;
        var size = 5 + Math.random() * 100;
		var radius = 5 + Math.random() * 100;
 
        var rectangle = new Rectangle(radius, speed, size, randomX, randomY);
        rectangles.push(rectangle);
    }
    drawAndUpdate();
}
	setupRectangles();
 
	function drawAndUpdate() {
    Context.clearRect(0, 0, 0, 0);


    for (var i = 0; i < circles.length; i++) {

        var myCircle = circles[i];
        myCircle.update();
    }
	
	for (var i = 0; i < semicircles.length; i++) {

        var mySemicircle = semicircles[i];
        mySemicircle.update();
    }
    for (var i = 0; i < squares.length; i++) {

        var mySquare = squares[i];
        mySquare.update();
    }
	for (var i = 0; i < squares.length; i++) {

        var mySquare = squares[i];
        mySquare.update();
    }
	
	for (var i = 0; i < squares.length; i++) {

        var mySquare = squares[i];
        mySquare.update();
    }
	for (var i = 0; i < rectangles.length; i++) {

        var myRectangle = rectangles[i];
        myRectangle.update();
    }
    requestAnimationFrame(drawAndUpdate);
	
}
	for (var j = 0; j < 4; j++)
{
    particles.push(new create_particle());
	
	function create_particle()
	{
	 
     this.x = Math.random()*W; 
     this.y = Math.random()*H;
                    
      
     this.vx = Math.random()* .5-5;   
     this.vy = Math.random()* .5-5;  
     
                function draw()
                {

                    
                    
                    for(var t = 0; t < particles.length; t++) 
                    {
                        
                        var p = particles[t];
                        
                        
                        var textText = ["Caution", "beware", "flying", "shapes!"];
                        
                        
                        var texttheme = ["#199BFF","#B1B260","#FCFF00","#CC9897"];
                        
                         
                        var textfont = ["Molle","Poiret One","Skranji","Oswald"];
                        
                       
                        Context.font = "8em '"+textfont[t]+"'";
                        
                          
                        Context.lineWidth = 5; 
                        
                        
                        Context.strokeStyle = texttheme[t];
                        
                        
                        Context.shadowColor = texttheme[t-1];
                        
                        Context.shadowOffsetX = 2;
                        Context.shadowOffsetY = 2;
                      
                        Context.shadowBlur = 25;
                        
                        
                        Context.fillStyle = texttheme[t+1];
                        
                       
                        Context.fillText(textText[t], p.x, p.y);
                        
                        Context.strokeText(textText[t], p.x, p.y);
                        
                          
                        p.x += p.vx/2;
                        p.y += p.vy/2;
                        
                       
                        if(p.x < -100) p.x = W+100;
                        if(p.y < -100) p.y = H+100;
                        if(p.x > W+100) p.x = -100;
                        if(p.y > H+100) p.y = -100;
                        
                    }
                   
                }
                
                function clearf () {
                  Context.clearRect(0, 0, canvas.width, canvas.height); 
                }
                 
                setInterval(clearf, 30);
               
                setInterval(draw, 30);	
       
}

	var t = Math.floor(Math.random()*W) -50;
	var r = Math.floor(Math.random()*H) -50;

	var speed = 10;

	function animate() {

    reqAnimFrame = window.mozRequestAnimationFrame    ||
                window.webkitRequestAnimationFrame ||
                window.msRequestAnimationFrame     ||
                window.oRequestAnimationFrame
                ;
	reqAnimFrame(animate);

    t += speed;

    if(t <= 0 || t >= W - 300){
        speed = -speed;
    }

    draw();
}

	function draw() {  
    Context.beginPath();
    Context.fillStyle = "rgba(190,204,100,0.3)";
    Context.moveTo(t,r);
    Context.lineTo(t + 100, r + (-180));
    Context.lineTo(t + 200, r);
    Context.scale(1,1);
    Context.rotate(Math.PI / 2);
    Context.fill();					
}
	animate();

};	
 
 
</script>
</html>
